# OS: Linux; Symfony: latest stable; PHP: all the commonly used versions supported by this bundle
name: "Tests"

on:
  pull_request:
  push:
    branches:
      - 'main'
    tags:
      - '*'

env:
  fail-fast: true

jobs:
  tests:
    name: "PHP ${{ matrix.php-version }}"
    runs-on: 'ubuntu-latest'
    continue-on-error: false
    strategy:
      matrix:
        php-version: ['8.1', '8.2', '8.3']
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Install PHP with extensions'
        uses: shivammathur/setup-php@v2
        with:
          coverage: xdebug
          php-version: ${{ matrix.php-version }}
          tools: composer:v2
          extensions: mbstring, intl, pdo, pdo_sqlite, sqlite3
          ini-values: date.timezone=UTC

      - name: 'Cache Composer packages'
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            php-${{ matrix.php-version }}-composer-

      - name: 'Install Composer dependencies'
        run: |
          composer validate --strict
          composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader --no-interaction

      - name: 'Run PHPUnit'
        env:
          SYMFONY_DEPRECATIONS_HELPER: max[total]=0
        run: php -d memory_limit=-1 ./vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: 'Upload code coverage (if token available)'
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          if [ -n "$CODECOV_TOKEN" ]; then
            curl -s https://codecov.io/bash | bash -s -- -t $CODECOV_TOKEN -f coverage.xml || echo "Codecov upload failed"
          else
            echo "Skipping code coverage upload - no token available"
          fi
